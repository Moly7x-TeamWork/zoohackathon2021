import json
from bs4 import BeautifulSoup
import torch
import transformers
from transformers import AutoModel, AutoTokenizer,MBartForConditionalGeneration

keywords = {
    "bán":1, "ban":1, "mua":1, "thu mua":1,
    "hàng ngon":1,
    "hiếm":1,
    "nấu cao":10,
    "sưu tầm":1,
    "thịt rừng":10,
    "thú rừng":10,
    "ngà":5,
}

exceptions = {"báo giá":1, "ngày":1}

species = {
'Cầy bay':1,
'Chồn bay':1,
'Cu li lớn':1,
'Cu li nhỏ':1,
'Voọc chà vá chân xám':1,
'Voọc chà vá chân đỏ':1,
'Voọc chà vá chân đen':1,
'Voọc mũi hếch':1,
'Voọc xám':1,
'Voọc mông trắng':1,
'Voọc đen má trắng':1,
'Voọc đen Hà Tĩnh':1,
'Voọc đen đầu vàng':1,
'Voọc Cát Bà ':1,
'Voọc bạc Đông Dương':1,
'Vườn đen tuyền tây bắc':1,
'Vượn đen má hung':1,
'Vượn đen má trắng':1,
'Vượn đen tuyền đông bắc':1,
'Chó sói lửa':1,
'Sói đỏ ':1,
'Gấu chó':1,
'Gấu ngựa':1,
'Rái cá thường':1,
'Rái cá lông mũi':1,
'Rái cá lông mượt':1,
'Rái cá vuốt bé':1,
'Cầy đen':1,
'Chồn mực ':1,
'Beo vàng':1,
'Beo lửa':1,
'Mèo ri':1,
'Mèo gấm':1,
'Mèo rừng':1,
'Mèo cá':1,
'Báo gấm':1,
'Báo hoa mai':1,
'Hổ':1,
'Voi':1,
'Tê giác một sừng':1,
'Hươu vàng':1,
'Nai cà tong':1,
'Mang lớn':1,
'Mang Trường Sơn':1,
'Hươu xạ':1,
'Bò tót':1,
'Bò rừng':1,
'Bò xám':1,
'Trâu rừng':1,
'Sơn dương':1,
'Sao la':1,
'Thỏ vằn':1,
'Gìa đẫy nhỏ':1,
'Quắm cánh xanh':1,
'Cò thìa':1,
'Sếu cổ trụi':1,
'Sếu đầu đỏ':1,
'Gà tiền mặt vàng':1,
'Gà tiền mặt đỏ':1,
'Trĩ sao':1,
'Công':1,
'Gà lôi hồng tía':1,
'Gà lôi mào trắng':1,
'Gà lôi Hà Tĩnh':1,
'Gà lôi mào đen':1,
'Gà lôi trắng':1,
'Hổ mang chúa':1,
'Rùa hộp ba vạch':1,
'Cynocephalus variegatus':1,
'Nycticebus bengalensis (N. coucang)':1,
'Nycticebus pygmaeus':1,
'Pygathrix cinerea':1,
'Pygathrix nemaeus':1,
'Pygathrix nigripes':1,
'Rhinopithecus avunculus':1,
'Trachypithecus barbei (T. phayrei)':1,
'Trachypithecus delacouri':1,
'Trachypithecus francoisi':1,
'Trachypithecus hatinhensis':1,
'Trachypithecus poliocephalus':1,
'Trachypithecus villosus (T. cristatus)':1,
'Nomascus (Hylobates) concolor':1,
'Nomascus (Hylobates) gabriellae':1,
'Nomascus (Hylobates) leucogenys':1,
'Nomascus (Hylobates) nasutus':1,
'Cuon alpinus':1,
'Ursus (Helarctos) malayanus':1,
'Ursus (Selenarctos) thibetanus':1,
'Lutra lutra':1,
'Lutra sumatrana':1,
'Lutrogale (Lutra) perspicillata':1,
'Amblonyx (Aonyx) cinereus (A. cinerea)':1,
'Arctictis binturong':1,
'Catopuma (Felis) temminckii':1,
'Felis chaus':1,
'Pardofelis (Felis) marmorata':1,
'Prionailurus (Felis) bengalensis':1,
'Prionailurus (Felis) viverrina':1,
'Neofelis nebulosa':1,
'Panthera pardus':1,
'Panthera tigris':1,
'Elephas maximus':1,
'Rhinoceros sondaicus':1,
'Axis (Cervus) porcinus':1,
'Cervus eldii':1,
'Megamuntiacus vuquangensis ':1,
'Muntiacus truongsonensis':1,
'Moschus berezovskii':1,
'Bos gaurus':1,
'Bos javanicus ':1,
'Bos sauveli':1,
'Bubalus arnee':1,
'Naemorhedus (Capricornis)  sumatraensis':1,
'Pseudoryx nghetinhensis':1,
'Nesolagus timinsi                  ':1,
'Leptoptilos javanicus':1,
'Pseudibis davisoni':1,
'Platalea minor':1,
'Grus antigone':1,
'Polyplectron bicalcaratum':1,
'Polyplectron germaini':1,
'Rheinardia ocellata':1,
'Pavo muticus':1,
'Lophura diardi':1,
'Lophura edwardsi':1,
'Lophura hatinhensis':1,
'Lophura imperialis':1,
'Lophura nycthemera':1,
'Ophiophagus hannah':1,
'Cuora trifasciata':1,
'Dơi ngựa lớn':2,
'Khỉ mặt đỏ':2,
'Khỉ mốc':2,
'Khỉ đuôi dài':2,
'Khỉ đuôi lợn':2,
'Khỉ vàng':2,
'Cáo lửa':2,
'Chó rừng':2,
'Triết bụng vàng':2,
'Triết nâu':2,
'Triết chỉ lưng':2,
'Cầy giông sọc':2,
'Cầy giông':2,
'Cầy hương':2,
'Cầy gấm':2,
'Cầy vằn bắc':2,
'Cheo cheo':2,
'Cheo cheo lớn':2,
'Sóc bay đen trắng':2,
'Sóc bay Côn Đảo':2,
'Sóc bay xám':2,
'Sóc bay bé':2,
'Sóc bay sao':2,
'Sóc bay lớn':2,
'Tê tê Java':2,
'Tê tê vàng':2,
'Hạc cổ trắng':2,
'Quắm lớn':2,
'Ngan cánh trắng':2,
'Ô tác':2,
'Diều hoa Miến Điện':2,
'Cắt nhỏ họng trắng':2,
'Gà so cổ hung':2,
'Gà so ngực gụ':2,
'Phướn đất':2,
'Bồ câu nâu':2,
'Yến hàng':2,
'Hồng hoàng':2,
'Niệc nâu':2,
'Niệc cổ hung':2,
'Niệc mỏ vằn':2,
'Vẹt má vàng':2,
'Vẹt đầu xám':2,
'Vẹt đầu hồng':2,
'Vẹt ngực đỏ':2,
'Vẹt lùn':2,
'Cú lợn lưng xám':2,
'Cú lợn lưng nâu':2,
'Dù dì phương đông':2,
'Chích choè lửa':2,
'Khướu cánh đỏ':2,
'Khướu ngực đốm':2,
'Khướu đầu đen':2,
'Khướu đầu xám':2,
'Khướu đầu đen má xám':2,
'Yểng':2,
'Nhồng ':2,
'Kỳ đà vân':2,
'Kỳ đà hoa':2,
'Trăn cộc':2,
'Trăn đất':2,
'Trăn gấm':2,
'Rắn sọc dưa':2,
'Rắn ráo trâu':2,
'Rắn cạp nia nam':2,
'Rắn cạp nia đầu vàng':2,
'Rắn cạp nia bắc':2,
'Rắn cạp nong':2,
'Rắn hổ mang':2,
'Rùa đầu to':2,
'Rùa đất lớn':2,
'Càng đước':2,
'Rùa răng':2,
'Rùa trung bộ':2,
'Rùa núi vàng':2,
'Rùa núi viền':2,
'Cá sấu hoa cà':2,
'Cá sấu Xiêm':2,
'Cá sấu nước ngọt ':2,
'Cá cóc Tam Đảo':2,
'Cặp Kìm sừng cong':2,
'Cặp kìm lớn':2,
'Cặp kìm song lưỡi hái':2,
'Cặp kìm song dao':2,
'Cua bay hoa nâu':2,
'Cua bay đen':2,
'Bọ hung năm sừng ':2,
'Bướm Phượng đuôi kiếm răng nhọn':2,
'Bướm Phượng đuôi kiếm răng tù':2,
'Bướm Phượng cánh chim chân liền':2,
'Bướm rừng đuôi trái đào':2,
'Bọ lá':2,
'Pteropus vampyrus':2,
'Macaca arctoides':2,
'Macaca assamensis':2,
'Macaca fascicularis':2,
'Macaca leonina (M. nemestrina)':2,
'Macaca mulatta':2,
'Vulpes vulpes':2,
'Canis aureus  ':2,
'Mustela kathiah':2,
'Mustela nivalis':2,
'Mustela strigidorsa':2,
'Viverra megaspila':2,
'Viverra zibetha':2,
'Viverricula indica':2,
'Prionodon pardicolor':2,
'Chrotogale owstoni ':2,
'Tragulus javanicus':2,
'Tragulus napu':2,
'Hylopetes alboniger':2,
'Hylopetes lepidus':2,
'Hylopetes phayrei':2,
'Hylopetes spadiceus':2,
'Petaurista elegans':2,
'Petaurista petaurista':2,
'Manis javanica':2,
'Manis pentadactyla':2,
'Ciconia episcopus':2,
'Thaumabitis (Pseudibis) gigantea':2,
'Cairina scutulata':2,
'Houbaropsis bengalensis':2,
'Spilornis cheela':2,
'Polihierax insignis':2,
'Arborophila davidi':2,
'Arborophila charltonii':2,
'Carpococcyx renauldi':2,
'Columba punicea':2,
'Collocalia germaini':2,
'Buceros bicornis':2,
'Annorhinus  tickelli':2,
'Aceros nipalensis':2,
'Aceros undulatus':2,
'Psittacula eupatria':2,
'Psittacula finschii':2,
'Psittacula roseata':2,
'Psittacula alexandri':2,
'Loriculus verlanis':2,
'Tyto alba':2,
'Tyto capensis':2,
'Ketupa zeylonensis':2,
'Copsychus malabaricus':2,
'Garrulax formosus':2,
'Garrulax merulinus':2,
'Garrulax milleti':2,
'Garrulax vassali':2,
'Garrulax yersini':2,
'Gracula religiosa':2,
'Varanus bengalensis (V. nebulosa)':2,
'Varanus salvator':2,
'Python curtus':2,
'Python molurus':2,
'Python reticulatus':2,
'Elaphe radiata':2,
'Ptyas mucosus':2,
'Bungarus candidus':2,
'Bungarus flaviceps':2,
'Bungarus multicinctus':2,
'Bungarus fasciatus':2,
'Naja naja':2,
'Platysternum megacephalum':2,
'Heosemys  grandis':2,
'Hieremys annandalii':2,
'Mauremys annamensis':2,
'Indotestudo elongata':2,
'Manouria impressa':2,
'Crocodylus porosus':2,
'Crocodylus siamensis':2,
'Paramesotriton deloustali':2,
'Dorcus curvidens':2,
'Dorcus grandis':2,
'Dorcus antaeus':2,
'Eurytrachelteulus titanneus':2,
'Cheriotonus battareli':2,
'Cheriotonus iansoni':2,
'Eupacrus gravilicornis':2,
'Teinopalpus aureus':2,
'Teinopalpus imperalis':2,
'Troides helena ceberus':2,
'Zeuxidia masoni':2,
'Phyllium succiforlium ':2,
'Cầy':3,
'Chồn ':3,
'Cu li    ':3,
'Voọc':3,
'Vượn ':3,
'Chó sói':3,
'Gấu ':3,
'Mật gấu':3,
'Rái cá ':3,
'Cầy ':3,
'Chồn ':3,
'Beo ':3,
'Báo ':3,
'Hổ':3,
'Voi':3,
'Tê giác':3,
'Hươu ':3,
'Nai ':3,
'Sếu ':3,
'Trĩ ':3,
'Công':3,
'Gà lôi':3,
'Hổ mang':3,
'Khỉ ':3,
'Cáo ':3,
'Sóc':3,
'Tê tê ':3,
'Hạc ':3,
'Mật rắn':3,
'Da rắn':3,
'Cá sấu ':3,
}

def sum_preprocessing(paragraphs):
    mark = dict()

    for paragraph in paragraphs:
        sentences = []
        cleantext = BeautifulSoup(paragraph, "lxml").text
        vs = cleantext.split("\n")
        for paragrapah in vs:
            for sentence in paragrapah.split("."):
                sentence = sentence.replace("more", "")
                sentence = sentence.replace("More", "")
                if len(sentence)>10: sentences.append(sentence)
        for sentence in sentences[1:]:
            mark[sentence] = 0
    return mark

def summarization_model(paragraphs):
    mark = sum_preprocessing(paragraphs)
    for val in mark:
        for keyword in keywords:
            if keyword.lower() in val.lower():
                # print(keyword, "----", val)
                mark[val] += keywords[keyword]

        for s in species:
            if s.lower() in val.lower():
                # print(s, "----", val)
                mark[val] += 5

        for exception in exceptions:
            if exception.lower() in val.lower():
                # print(exception, "-tru-", val)
                mark[val] -= exceptions[exception]

    mark_sorted = {k: v for k, v in sorted(mark.items(), key=lambda item: item[1])}
    result = []
    for val in mark_sorted.keys():
        result.append(val)

    raw_summarization = '. '.join(result[-10:])
    tokenizer = AutoTokenizer.from_pretrained('vinai/bartpho-word', use_fast=True)
    model = MBartForConditionalGeneration.from_pretrained("vinai/bartpho-word")
    torch_device = 'cpu'
    no_repeat_ngram_size = 3
    num_beams = 4
    length_penalty= 2.0
    max_length = 10000
    min_length = 5

    text = raw_summarization.replace('\n', '')
    text_input_ids = tokenizer.batch_encode_plus([text], return_tensors='pt', max_length=1024)['input_ids'].to(torch_device)
    summary_ids = model.generate(text_input_ids, num_beams=int(num_beams), length_penalty=float(length_penalty), max_length=int(max_length), min_length=int(min_length), no_repeat_ngram_size=int(no_repeat_ngram_size))
    summary = tokenizer.decode(summary_ids.squeeze(), skip_special_tokens=True)
    return summary

if __name__ == '__main__':

    data = []
    for i in range(1, 5):
        f = open('data/module/{}.json'.format(i))
        d = json.load(f)
        data.extend(d)

    paragraphs = []
    for val in data:
        paragraphs.append(val['text'])

    print(summarization_model(paragraphs))